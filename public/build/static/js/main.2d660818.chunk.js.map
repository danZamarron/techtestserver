{"version":3,"sources":["services/auth.js","context.js","components/layout.js","services/task.js","components/AddTask.js","pages/ListTask.js","pages/Login.js","pages/SignUp.js","App.js","index.js"],"names":["baseURL","service","axios","create","withCredentials","signupService","user","a","post","catch","err","message","response","data","status","loginService","getCurrentUserService","get","logoutService","AppContext","createContext","Provider","children","useState","setUser","setContextUser","useEffect","fetchUser","value","clearContextUser","Header","Layout","Content","Footer","contentStyle","background","padding","minHeight","logoStyle","width","height","margin","float","LayOut","useContext","logoutProcess","success","className","style","theme","mode","defaultSelectedKeys","Item","key","to","onClick","username","textAlign","addTaskService","task","deleteTaskService","taskId","delete","doneTaskService","put","Title","Typography","successMsg","AddTask","forwardRef","props","ref","closeModal","mutateSWR","mutateURL","Form","useForm","form","showErrors","setShowErrors","showMsg","setShowMsg","values","result","useImperativeHandle","addTask","submit","resetFields","layout","onFinish","name","label","rules","required","whitespace","justify","level","type","url","fetcher","fetch","then","res","json","Column","Table","confirm","Modal","notLogged","ListTask","showModalAgregar","setShowModalAgregar","childRef","useRef","showDeleteConfirm","title","_id","content","okText","okType","cancelText","onOk","deleteTask","onCancel","mutate","error","showDoneConfirm","doneTask","useSWR","block","centered","visible","current","marginTop","rowKey","record","dataSource","dataIndex","render","text","userCreated","align","userAccepted","disabled","Login","password","history","push","initialValues","remember","Password","htmlType","SignUp","scrollToFirstError","App","exact","path","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2d660818.chunk.js","sourcesContent":["import axios from \"axios\"\n\nlet baseURL;\n\n\nprocess.env.NODE_ENV === \"production\"\n  ? (baseURL = \"/\")\n  : (baseURL = process.env.REACT_APP_LOCALHOST)\n  \nbaseURL = baseURL + \"auth\"\n  \nconst service = axios.create({ withCredentials: true, baseURL })\n\nexport const signupService = async user => {\n  return await service.post(\"/signup\", user).catch(err => {\n      return {message: err.response?.data?.message, status: err?.status}\n  })\n}\n  \nexport const loginService = async user => {\n  return await service.post(\"/login\", user).catch(err => {\n    return {message: err.response?.data?.message, status: err?.status}\n  })\n}\n\nexport const getCurrentUserService = async () => {\n  return await service.get(\"/currentUser\")\n}\n\nexport const logoutService = async () => {\n  return await service.get(\"/logout\")\n}\n","import React, { createContext, useState, useEffect } from \"react\"\nimport { getCurrentUserService } from \"./services/auth\"\nexport const AppContext = createContext()\n\n\nexport default function Provider({ children }) {\n    const [user, setUser] = useState(null)\n  \n    const setContextUser = user => setUser(user)\n    const clearContextUser = () => setUser(null)\n  \n    useEffect(() => {\n      async function fetchUser() {\n        const {data: { user }} = await getCurrentUserService()\n        setContextUser(user)\n      }\n      fetchUser()\n    }, [])\n  \n    useEffect(() => {\n      \n    }, [user])\n  \n    return (\n      <AppContext.Provider\n        value={{\n          user,\n          setContextUser,\n          clearContextUser\n        }}\n      >\n        {children}\n      </AppContext.Provider>\n    )\n  }","import React, {useContext} from 'react'\nimport { Layout, Menu, Breadcrumb, message } from 'antd';\nimport { Link } from \"react-router-dom\"\n\nimport { logoutService } from \"../services/auth\"\nimport { AppContext } from \"../context\"\nconst successMsg = () => message.success('Sesion terminada');\n\nconst { Header, Content, Footer } = Layout;\nconst contentStyle = {\n    background: \"#ffffff\",\n    padding: \"24px\",\n    minHeight: \"280px\"\n}\n\nconst logoStyle = \n{\n    width: \"120px\",\n    height: \"31px\",\n    background: \"rgba(255, 255, 255, 0.2)\",\n    margin: \"16px 24px 16px 0\",\n    float: \"left\"\n}\n\n\nconst LayOut = ({children}) => {\n\n    const { clearContextUser, user } = useContext(AppContext)\n\n\n    const logoutProcess = async () => {\n        await logoutService()\n        clearContextUser()\n        successMsg()\n    }\n\n    return (\n        <Layout className=\"layout\" style={{ minHeight: '100vh' }}>\n            <Header>\n            <div style={logoStyle}/>\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n                <Menu.Item key=\"1\"><Link to='/'>Home</Link></Menu.Item>\n                {!user &&<Menu.Item key=\"2\"><Link to='/login'>Login</Link></Menu.Item>}\n                {!user &&<Menu.Item key=\"3\"><Link to='/signup'>Sign Up</Link></Menu.Item>}\n                {user &&<Menu.Item key=\"4\"><Link to='/' onClick={logoutProcess} >Cerrar Sesion de {user?.username}</Link></Menu.Item>}\n            </Menu>\n            </Header>\n            <Content style={{ padding: '0 50px' }}>\n            <Breadcrumb style={{ margin: '20px' }}>\n                {user && <Breadcrumb.Item>Estas Logeado como: <strong>{user?.username}</strong></Breadcrumb.Item>}\n            </Breadcrumb>\n                <div style={contentStyle}>{children}</div>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n        </Layout>\n    )\n}\n\nexport default LayOut\n","import axios from \"axios\"\n\nlet baseURL;\n\n\nprocess.env.NODE_ENV === \"production\"\n  ? (baseURL = \"/\")\n  : (baseURL = process.env.REACT_APP_LOCALHOST)\n  \nbaseURL = baseURL + \"api/task\"\n  \nconst service = axios.create({ withCredentials: true, baseURL })\n\nexport const addTaskService = async task => {\n  return await service.post(\"/\", task).catch(err => {\n      return {message: err.response?.data?.message, status: err?.status}\n  })\n}\n  \nexport const deleteTaskService = async taskId => {\n  return await service.delete(`/delete/${taskId}`).catch(err => {\n    return {message: err.response?.data?.message, status: err?.status}\n  })\n}\n\nexport const doneTaskService = async taskId => {\n  return await service.put(`/done/${taskId}`).catch(err => {\n    return {message: err.response?.data?.message, status: err?.status}\n  })\n}\n","import React, {useState, useEffect,forwardRef, useImperativeHandle} from 'react'\nimport { Form, Input, Row, Col, Typography, message } from \"antd\"\nimport {addTaskService} from \"../services/task\"\n\nconst { Title } = Typography;\nconst successMsg = () => message.success('Se agrego la task');\n\n\nconst AddTask = forwardRef((props, ref) => {\n\n    const {closeModal, mutateSWR, mutateURL} = props;\n    const [form] = Form.useForm()\n    const [showErrors, setShowErrors] = useState(false)\n    const [showMsg, setShowMsg] = useState(\"\")\n\n    useImperativeHandle(\n        ref,\n        () => ({\n            addTask() {\n                form.submit()\n            }\n         }),\n     )\n\n     useEffect(() => {\n        return function cleanup() {\n            form.resetFields([\"title\",\"description\"])\n        };\n      });\n\n\n    async function submitFormFromChild(values){        \n        setShowErrors(false)\n        let result = await addTaskService(values)\n        if(result.status === 201){\n            successMsg();\n            closeModal(false)\n            mutateSWR(mutateURL)\n        }\n        else\n        {\n            setShowErrors(true)\n            setShowMsg(result.message)\n        }\n      }\n\n    return (\n        <>                    \n            <Form layout='vertical' form={form} onFinish={submitFormFromChild}>\n                <Form.Item\n                      name=\"title\"\n                      label=\"Titulo de la Task\"\n                      rules={[{ required: true, message: 'Favor de escribir un titulo de task', whitespace: true }]}\n                  >\n                      <Input />\n                  </Form.Item>\n\n                  <Form.Item\n                      name=\"description\"\n                      label=\"Descripcion de la Task\"\n                      rules={[{ required: true, message: 'Favor de escribir una descripcion ', whitespace: true }]}\n                  >\n                      <Input />\n                  </Form.Item>\n  \n                  <Row justify=\"center\">\n                      <Col >\n                          {showErrors && <Title level={5} type=\"warning\">{showMsg}</Title>}\n                      </Col>\n                  </Row>  \n              </Form>            \n        </>\n    )\n})\n\nexport default AddTask\n","import React, {useContext, useState, useRef} from 'react'\nimport { Table, Modal, Button, Row, Col, message} from 'antd';\nimport useSWR, { mutate } from \"swr\";\nimport { AppContext } from \"../context\"\nimport AddTask from \"../components/AddTask\"\nimport {deleteTaskService, doneTaskService } from \"../services/task\"\n\n\nconst url = \"http://localhost:4000/api/task\"\nconst fetcher = url => fetch(url).then(res => res.json());\n\nconst { Column } = Table;\nconst { confirm } = Modal;\n\nconst notLogged = () => <h5>No estas logeado</h5>\n\n\nconst ListTask = () => {\n\n    const { user } = useContext(AppContext)\n\n    const [showModalAgregar, setShowModalAgregar] = useState(false)\n    const childRef = useRef();\n\n    function showDeleteConfirm({title, _id: taskId}) {\n        confirm({\n        title: `Borrar Task`,\n        content: `Borrar la Task ${title}`,\n        okText: 'Si',\n        okType: 'danger',\n        cancelText: 'No',\n        onOk() {\n            deleteTask(taskId)\n        },\n        onCancel() {\n        },\n        });\n    }\n\n    async function deleteTask(taskId)\n    {\n        let result = await deleteTaskService(taskId)\n        if(result.status === 200)\n        {\n            message.success('Se elimino la task satisfactoriamente');\n            mutate(url)\n        }\n        else{\n            message.error(result.message)\n        }\n    }\n\n    function showDoneConfirm({title, _id: taskId}) {\n        confirm({\n        title: `Finalizar Task`,\n        content: `Finalizar la Task ${title}`,\n        okText: 'Si',\n        okType: 'primary',\n        cancelText: 'No',\n        onOk() {\n            doneTask(taskId)\n        },\n        onCancel() {\n        },\n        });\n    }\n\n    async function doneTask(taskId)\n    {\n        let result = await doneTaskService(taskId)\n        if(result.status === 201)\n        {\n            message.success('Se termino la task satisfactoriamente');\n            mutate(url)\n        }\n        else{\n            message.error(result.message)\n        }\n    }\n\n\n    const { data, error } = useSWR(\n        url,\n        fetcher\n      );\n    \n    if (error) return \"An error has occurred.\";\n    if (!data) return \"Loading...\";\n\n    return (\n        <div>\n            <Row>\n                <Col>\n                    {user ? \n                        (\n                            <>\n                            <Button block type=\"primary\" onClick={() => setShowModalAgregar(true)}>\n                                Agrega una Task\n                            </Button>\n\n                            <Modal\n                                centered\n                                title={'Agrega Task'}\n                                visible={showModalAgregar}\n                                onCancel={() => setShowModalAgregar(false)}\n                                onOk={() => {\n                                    childRef.current.addTask()\n                                }}\n                                width={700}\n\n                            >\n                                <AddTask ref={childRef}  \n                                            closeModal={setShowModalAgregar}\n                                            mutateSWR = {mutate}\n                                            mutateURL = {url} />\n                            </Modal>\n                            </>\n                        )\n                        :\n                        <></>\n                    }\n                </Col>\n            </Row>\n\n\n            <Table style={{marginTop:\"30px\"}} key={\"x\"} rowKey={record => record._id} dataSource={data}>\n                <Column title=\"Titulo\" dataIndex=\"title\" key=\"title\" />\n                <Column title=\"Descripcion\" dataIndex=\"description\" key=\"description\" />\n                <Column title=\"Creada por\" dataIndex=\"userCreated\" key=\"userCreated\"  \n                render={(text, record) => (\n                    <>\n                        {record.userCreated.username}\n                    </>\n                )}\n\n                />\n                \n                <Column\n                title=\"Finalizar Task\"\n                key=\"Done\"\n                align=\"center\"\n                render={(text, record) => (\n                    <>\n                        \n                        {\n                            (user) ? \n                            (\n                                (record.userAccepted) ?\n                                (\n                                    <h4>Terminada por: {record.userAccepted.username}</h4>\n                                )\n                                :\n                                (\n                                    <Button onClick={() => showDoneConfirm(record)} type=\"primary\">\n                                            Finalizar\n                                    </Button>\n                                )\n                            )\n                            :\n                            notLogged()\n                            \n                        }\n                        \n                    </>\n                )}\n                />\n\n                <Column\n                    title=\"Borrar Task\"\n                    key=\"Delete\"\n                    align=\"center\"\n                    render={(text, record) => (\n                        <>\n                            \n                            {\n                                (user) ? \n                                (\n                                    (record.userCreated._id === user._id) ?\n                                    (\n                                        <Button onClick={() => showDeleteConfirm(record)} type=\"danger\">\n                                            Borrar Task\n                                        </Button>\n                                    )\n                                    :\n                                    (\n                                        <Button disabled type=\"dashed\">\n                                            Not Task's Autor\n                                        </Button>\n                                    )\n                                )\n                                :                                \n                                notLogged()\n                            }\n                            \n                        </>\n                    )}\n                />\n\n            </Table>\n        </div>\n    )\n}\n\nexport default ListTask\n","import React, {useState, useContext} from 'react'\nimport { Form, Input, Button, Row, Col, Typography, message} from 'antd';\nimport {loginService} from \"../services/auth\"\nimport { AppContext } from \"../context\"\n\nconst { Title } = Typography;\nconst successMsg = (username) => message.success(`Gracias por entrar ${username}`);\n\nconst Login = (props) => {\n\n    const [form] = Form.useForm();\n    const [showErrors, setShowErrors] = useState(false)\n    const [showMsg, setShowMsg] = useState(\"\")\n    const { setContextUser } = useContext(AppContext)\n    \n    const onFinish = async values => {    \n        setShowErrors(false)\n        let result = await loginService(values)\n        if(result.status === 200){\n            result.data.password = \"\";\n            setContextUser(result.data)\n            successMsg(result.data.username);\n            props.history.push(\"/\")\n        }\n        else\n        {\n            setShowErrors(true)\n            setShowMsg(result.message)\n        }\n    };\n\n\n    return (\n        <div>\n        <h2>Login</h2>\n        <Form\n        name=\"normal_login\"\n        form={form}\n        layout=\"vertical\"\n        className=\"login-form\"\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n        >\n            <Form.Item\n                name=\"username\"\n                label=\"Username\"\n                rules=\n                {[\n                    {\n                    required: true\n                    },\n                ]}\n            >\n                <Input/>\n            </Form.Item>\n            <Form.Item\n                name=\"password\"\n                label=\"Password\"\n                rules={[{ required: true }]}\n            >\n                <Input.Password/>\n            </Form.Item>\n\n            \n            <Row justify=\"center\">\n                <Col >\n                    {showErrors && <Title level={5} type=\"warning\">{showMsg}</Title>}\n                </Col>\n            </Row>\n\n            <Form.Item >\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Log in\n                </Button>\n            </Form.Item>\n        </Form>\n\n    </div>\n    )\n}\n\nexport default Login\n","import React, {useState} from 'react'\nimport {Form, Input, Button, Row, Col, Typography, message} from 'antd'; \n\nimport {signupService} from \"../services/auth\"\nconst { Title } = Typography;\nconst successMsg = () => message.success('Gracias por registrarse!');\n\nconst SignUp = (props) => {\n    const [form] = Form.useForm();\n    const [showErrors, setShowErrors] = useState(false)\n    const [showMsg, setShowMsg] = useState(\"\")\n\n    const onFinish = async values => {\n        setShowErrors(false)\n        let result = await signupService(values)\n        if(result.status === 200){\n          successMsg();\n          props.history.push(\"/login\")\n        }\n        else\n        {\n            setShowErrors(true)\n            setShowMsg(result.message)\n        }\n    };\n    \n    return (\n        <>\n\n          <h2>Sign Up</h2>\n          <Form\n            layout=\"vertical\"\n            form={form}\n            name=\"register\"\n            onFinish={onFinish}\n            scrollToFirstError\n          >\n      \n            <Form.Item\n              name=\"username\"\n              label=\"Username\"\n              rules={[{ required: true, whitespace: true }]}\n            >\n              <Input />\n            </Form.Item>\n      \n            <Form.Item\n              name=\"password\"\n              label=\"Password\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >          \n                <Input.Password />\n            </Form.Item>\n      \n  \n            <Row justify=\"left\">\n              <Col >\n                  {showErrors && <Title level={5} type=\"warning\">{showMsg}</Title>}\n              </Col>\n            </Row>\n  \n            <Form.Item >\n              <Button type=\"primary\" htmlType=\"submit\">\n                Registrar\n              </Button>\n            </Form.Item>\n          </Form>\n        </>\n    )\n}\n\nexport default SignUp\n","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport './App.css';\n\nimport LayOut from \"./components/layout\"\nimport ListTask from \"./pages/ListTask\"\nimport Login from \"./pages/Login\"\nimport SignUp from \"./pages/SignUp\"\n\nfunction App() {\n  return (\n    <Router>\n      <LayOut>\n        <Switch>\n          <Route exact path='/' component={ListTask} />\n          <Route exact path='/signup' component={SignUp} />\n          <Route exact path='/login' component={Login} />\n        </Switch>\n      </LayOut>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport AppContextProvider from \"./context\"\nimport \"antd/dist/antd.css\"\n\nReactDOM.render(\n  <AppContextProvider>\n    <App />\n  </AppContextProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}